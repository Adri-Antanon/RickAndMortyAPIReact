{"version":3,"sources":["components/CharacterCard.jsx","components/SearchCharacters.jsx","helpers/index.js","assets/images/left-arrow.svg","assets/images/right-arrow.svg","components/Arrow.jsx","hooks/useCharacters.js","components/FavoriteCharacters.jsx","screens/Characters.jsx","context/ThemeContext.js","screens/ShowCharacters.jsx","App.js","reportWebVitals.js","index.js"],"names":["CharacterCard","props","id","name","status","species","gender","image","isFavorite","handleClick","handleClickRemove","console","log","origin","className","src","alt","type","onClick","SearchCharacters","search","searchInput","handleSearch","style","marginTop","ref","value","onChange","placeholder","favoriteReducer","state","action","favorites","find","item","payload","filter","items","initialState","Arrow","page","setPage","ArrowLeft","ArrowRight","useCharacters","url","useState","characters","setCharacters","useEffect","fetch","then","response","json","data","results","FavoriteCharacters","marginBottom","map","favorite","Characters","useReducer","dispatch","setSearch","useRef","useCallback","current","filteredUsers","useMemo","user","toLowerCase","includes","length","character","ThemeContext","React","createContext","ShowCharacters","color","useContext","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"sSAgCeA,EA9BO,SAACC,GAAW,IAEtBC,EAAyFD,EAAzFC,GAAIC,EAAqFF,EAArFE,KAAMC,EAA+EH,EAA/EG,OAAQC,EAAuEJ,EAAvEI,QAASC,EAA8DL,EAA9DK,OAAQC,EAAsDN,EAAtDM,MAAOC,EAA+CP,EAA/CO,WAAYC,EAAmCR,EAAnCQ,YAAaC,EAAsBT,EAAtBS,kBAE3E,OADAC,QAAQC,IAAIC,QAER,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAKR,EAAOS,IAAKb,IACtB,sBAAKW,UAAU,sBAAf,UACI,mCAAK,6CAAL,IAA+BX,EAA/B,OACA,mCAAK,+CAAL,IAAiCC,EAAjC,OACA,mCAAK,kDAAL,IAAiCE,EAAjC,OACA,4BAAoB,YAAhBO,OAAOV,KAAqB,oBAAsBU,OAAOV,OAC3DK,EAOE,wBACIS,KAAK,SACLC,QAAS,kBAAMR,EAAkBR,IAFrC,eAPW,wBACXe,KAAK,SACLC,QAAS,kBAAMT,EAAY,CAAEP,KAAIC,OAAMC,SAAQC,UAASC,SAAQC,WAFrD,oBAPcL,ICK9BiB,EAVU,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAE7C,OACI,sBAAKR,UAAU,SAASS,MAAO,CAAEC,UAAW,IAA5C,UACI,wDACA,uBAAOC,IAAKJ,EAAaJ,KAAK,OAAOS,MAAON,EAAQO,SAAUL,EAAcM,YAAY,mC,OCPvFC,EAAkB,SAACC,EAAOC,GACnC,OAAQA,EAAOd,MACX,IAAK,kBAED,OADgBa,EAAME,UAAUC,MAAK,SAAAC,GAAI,OAAIA,EAAKhC,KAAO6B,EAAOI,QAAQjC,MACpD,eAAK4B,GAClB,2BACAA,GADP,IAEIE,UAAU,GAAD,mBAAMF,EAAME,WAAZ,CAAuBD,EAAOI,YAG/C,IAAK,kBACD,OAAO,2BACAL,GADP,IAEIE,UAAWF,EAAME,UAAUI,QAAO,SAAAC,GAAK,OAAIA,EAAMnC,KAAO6B,EAAOI,aAGvE,QACI,OAAOL,IAINQ,EAAe,CACxBN,UAAW,ICtBA,MAA0B,uCCA1B,MAA0B,wCCgB1BO,EAXD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAEnB,OACI,gCACKD,EAAO,GAAK,yBAAQvB,KAAK,SAASC,QAAS,kBAAMuB,EAAQD,EAAO,IAApD,cAA0D,qBAAK1B,UAAU,QAAQC,IAAK2B,EAAW1B,IAAI,eAArG,OACZwB,EAAO,IAAM,yBAAQvB,KAAK,SAASC,QAAS,kBAAMuB,EAAQD,EAAO,IAApD,cAA0D,qBAAK1B,UAAU,QAAQC,IAAK4B,EAAY3B,IAAI,gBAAtG,WCKX4B,EAZO,SAAAC,GAAQ,IAAD,EACWC,mBAAS,IADpB,mBAClBC,EADkB,KACNC,EADM,KASzB,OANAC,qBAAU,WACNC,MAAML,GACDM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAcM,EAAKC,cACtC,CAACV,IAEGE,GCMIS,G,MAdY,SAAC,GAAsC,IAApCxB,EAAmC,EAAnCA,UAAWtB,EAAwB,EAAxBA,kBAErC,OACI,sBAAKa,MAAO,CAAEkC,aAAc,IAA5B,UACI,uDACA,qBAAK3C,UAAU,aAAf,SACKkB,EAAUA,UAAU0B,KAAI,SAAAC,GAAQ,OAC7B,cAAC,EAAD,2BAAmBA,GAAnB,IAA6BnD,YAAY,EAAME,kBAAmBA,eCyEvEkD,EAtEI,WAAO,IAAD,EACGd,mBAAS,GADZ,mBACdN,EADc,KACRC,EADQ,OAESoB,qBAAWhC,EAAiBS,GAFrC,mBAEdN,EAFc,KAEH8B,EAFG,OAGOhB,mBAAS,IAHhB,mBAGd1B,EAHc,KAGN2C,EAHM,KAIf1C,EAAc2C,iBAAO,MACrBjB,EAAaH,EAAc,GAAD,OAPT,6CAOS,iBAA+BJ,IAUzD/B,EAAc,SAACkD,GACjBG,EAAS,CAAE7C,KAAM,kBAAmBkB,QAASwB,KAY3CrC,EAAe2C,uBAAY,WAC7BF,EAAU1C,EAAY6C,QAAQxC,SAC/B,IASGyC,EAAgBC,mBAAQ,kBAC1BrB,EAAWX,QAAO,SAACiC,GACf,OAAOA,EAAKlE,KAAKmE,cAAcC,SAASnD,EAAOkD,oBAEnD,CAACvB,EAAY3B,IAIjB,OACI,gCACKY,EAAUA,UAAUwC,OAAS,EAC1B,cAAC,EAAD,CAAoBxC,UAAWA,EAAWtB,kBA/B5B,SAACR,GACvB4D,EAAS,CAAE7C,KAAM,kBAAmBkB,QAASjC,OAgCrC,gEAGJ,cAAC,EAAD,CAAOsC,KAAMA,EAAMC,QAASA,IAE5B,cAAC,EAAD,CAAkBrB,OAAQA,EAAQC,YAAaA,EAAaC,aAAcA,IAE1E,qBAAKR,UAAU,aAAf,SACKqD,EAAcT,KAAI,SAACe,GAAD,OACf,8BACI,cAAC,EAAD,2BAAmBA,GAAnB,IAA8BhE,YAAaA,MADrCgE,EAAUvE,aCvEzBwE,EAFMC,IAAMC,cAAc,MCgB1BC,G,MAXQ,WACnB,IAAMC,EAAQC,qBAAWL,GAEzB,OACI,sBAAK5D,UAAU,SAAf,UACI,oBAAIS,MAAO,CAAEuD,SAAb,0CACA,cAAC,EAAD,SCAGE,MAVf,WACE,OAEE,sBAAKlE,UAAU,MAAf,UACE,oBAAIA,UAAU,eAAd,2EACA,cAAC,EAAD,QCISmE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAaC,SAAd,CAAuBlE,MAAM,UAA7B,SACE,cAAC,EAAD,QAGJmE,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8987b7ad.chunk.js","sourcesContent":["\r\n\r\nconst CharacterCard = (props) => {\r\n\r\n    const { id, name, status, species, gender, image, isFavorite, handleClick, handleClickRemove } = props;\r\n    console.log(origin);\r\n    return (\r\n        <div className=\"Character-card\" key={id}>\r\n            <img src={image} alt={name} />\r\n            <div className=\"Character-card-info\">\r\n                <p>  <strong> Name: </strong> {name} </p>\r\n                <p>  <strong> Status: </strong> {status} </p>\r\n                <p>  <strong> Género: </strong> {gender} </p>\r\n                <p>{origin.name === 'unknown' ? 'Lugar desconocido' : origin.name}</p>\r\n                {!isFavorite ? <button\r\n                    type=\"button\"\r\n                    onClick={() => handleClick({ id, name, status, species, gender, image })}\r\n                >\r\n                    +\r\n                </button>\r\n                    :\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => handleClickRemove(id)}\r\n                    >\r\n                        -\r\n                </button>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CharacterCard;","import React from 'react';\r\n\r\nconst SearchCharacters = ({ search, searchInput, handleSearch }) => {\r\n\r\n    return (\r\n        <div className=\"Search\" style={{ marginTop: 50 }}>\r\n            <h2>Buscador de personajes</h2>\r\n            <input ref={searchInput} type=\"text\" value={search} onChange={handleSearch} placeholder=\"Personajes de la página\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchCharacters;","export const favoriteReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TO_FAVORITE':\r\n            const isExist = state.favorites.find(item => item.id === action.payload.id)\r\n            if (isExist) return { ...state }\r\n            return {\r\n                ...state,\r\n                favorites: [...state.favorites, action.payload]\r\n            }\r\n\r\n        case 'REMOVE_FAVORITE':\r\n            return {\r\n                ...state,\r\n                favorites: state.favorites.filter(items => items.id !== action.payload)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initialState = {\r\n    favorites: []\r\n};","export default __webpack_public_path__ + \"static/media/left-arrow.8d435aeb.svg\";","export default __webpack_public_path__ + \"static/media/right-arrow.194ca1ae.svg\";","import React from 'react';\r\n\r\nimport ArrowLeft from '../assets/images/left-arrow.svg'\r\nimport ArrowRight from '../assets/images/right-arrow.svg'\r\n\r\nconst Arrow = ({ page, setPage }) => {\r\n\r\n    return (\r\n        <div>\r\n            {page > 1 && <button type=\"button\" onClick={() => setPage(page - 1)} > <img className=\"Arrow\" src={ArrowLeft} alt=\"arrow Left\" /> </button>}\r\n            {page < 33 && <button type=\"button\" onClick={() => setPage(page + 1)} > <img className=\"Arrow\" src={ArrowRight} alt=\"arrow right\" /> </button>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Arrow;\r\n\r\n","import { useState, useEffect } from 'react';\r\n\r\n\r\nconst useCharacters = url => {\r\n    const [characters, setCharacters] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => setCharacters(data.results))\r\n    }, [url]);\r\n\r\n    return characters\r\n};\r\n\r\nexport default useCharacters;","import React from 'react';\r\n\r\nimport CharacterCard from './CharacterCard';\r\n\r\nconst FavoriteCharacters = ({ favorites, handleClickRemove }) => {\r\n\r\n    return (\r\n        <div style={{ marginBottom: 50 }}>\r\n            <h2>Personajes favoritos </h2>\r\n            <div className=\"Characters\">\r\n                {favorites.favorites.map(favorite =>\r\n                    <CharacterCard {...favorite} isFavorite={true} handleClickRemove={handleClickRemove} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FavoriteCharacters;","import { useState, useReducer, useMemo, useRef, useCallback } from 'react';\r\n\r\nimport CharacterCard from '../components/CharacterCard';\r\nimport SearchCharacters from '../components/SearchCharacters';\r\nimport { favoriteReducer, initialState } from '../helpers';\r\nimport Arrow from '../components/Arrow';\r\nimport useCharacters from '../hooks/useCharacters';\r\n\r\n\r\nimport '../assets/styles/styles.css';\r\nimport FavoriteCharacters from '../components/FavoriteCharacters';\r\n\r\nconst RICK_AND_MORTY_API = 'https://rickandmortyapi.com/api/character/';\r\n\r\nconst Characters = () => {\r\n    const [page, setPage] = useState(1);\r\n    const [favorites, dispatch] = useReducer(favoriteReducer, initialState);\r\n    const [search, setSearch] = useState('');\r\n    const searchInput = useRef(null);\r\n    const characters = useCharacters(`${RICK_AND_MORTY_API}?page=${page}`) // Esto modulariza nuestro useEffect en un hook personalizado, por lo que prescindo de los dos bloques comentados abajo\r\n\r\n    // const [characters, setCharacters] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(`${RICK_AND_MORTY_API}?page=${page}`)\r\n    //         .then(response => response.json())\r\n    //         .then(data => setCharacters(data.results))\r\n    // }, [page]);\r\n\r\n    const handleClick = (favorite) => {\r\n        dispatch({ type: 'ADD_TO_FAVORITE', payload: favorite })\r\n    }\r\n\r\n    const handleClickRemove = (id) => {\r\n        dispatch({ type: 'REMOVE_FAVORITE', payload: id })\r\n    }\r\n\r\n    // Ahora lo hacemos con useCallback\r\n    // const handleSearch = () => {\r\n    //     setSearch(searchInput.current.value);\r\n    // }\r\n\r\n    const handleSearch = useCallback(() => {\r\n        setSearch(searchInput.current.value);\r\n    }, [])\r\n    // El segundo parámetro hace referencia al elemento que va a escuchar, y solo va a hacer un cambio de la referencia cuando el elemento cambie\r\n\r\n\r\n    // Esta función sirve para filtrar los personajes, se puede realizar más optima con useMemo\r\n    // const filteredUsers = characters.filter((user) => {\r\n    //     return user.name.toLowerCase().includes(search.toLowerCase());\r\n    // })\r\n\r\n    const filteredUsers = useMemo(() =>\r\n        characters.filter((user) => {\r\n            return user.name.toLowerCase().includes(search.toLowerCase());\r\n        }),\r\n        [characters, search]\r\n    );\r\n    // Con esto lo que hace es escuchar los elementos que cambiarán, y cuando cambien los personajes o cambie search, va a recordar el valor, optimizando el uso de memoria\r\n\r\n    return (\r\n        <div>\r\n            {favorites.favorites.length > 0 ?\r\n                <FavoriteCharacters favorites={favorites} handleClickRemove={handleClickRemove} />\r\n                :\r\n                <h3>No hay personajes favoritos...</h3>\r\n            }\r\n\r\n            <Arrow page={page} setPage={setPage} />\r\n\r\n            <SearchCharacters search={search} searchInput={searchInput} handleSearch={handleSearch} />\r\n\r\n            <div className=\"Characters\" >\r\n                {filteredUsers.map((character) => (\r\n                    <div key={character.id}>\r\n                        <CharacterCard {...character} handleClick={handleClick} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Characters;","import React from 'react';\r\n\r\nconst ThemeContext = React.createContext(null);\r\n\r\nexport default ThemeContext;","import { useContext } from 'react';\r\nimport Characters from './Characters';\r\n\r\nimport ThemeContext from '../context/ThemeContext';\r\n\r\nimport '../assets/styles/button.css';\r\n\r\nconst ShowCharacters = () => {\r\n    const color = useContext(ThemeContext);\r\n\r\n    return (\r\n        <div className=\"Header\">\r\n            <h1 style={{ color }} >Personajes de Rick and Morty</h1>\r\n            <Characters />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowCharacters;","import './App.css';\nimport ShowCharacters from './screens/ShowCharacters';\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <h1 className=\"header-title\">Consumo de API usando React Hooks por Adrián Antañón</h1>\n      <ShowCharacters />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeContext from './context/ThemeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContext.Provider value=\"#00b347\">\n      <App />\n    </ThemeContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}